name: Telink_TL32_CMake_Build

on: [push, pull_request]
# on: 
#   workflow_dispatch:
#     inputs:
#       cproject:
#         description: |
#           'Select the compiled project, cproject path'
#           './telink_zigbee_ble_concurrent/build/iot_riscv_b92/.cproject'
#         required: true
#         default: './telink_zigbee_ble_concurrent/build/iot_riscv_b92/.cproject'
#       target:
#         description: |
#           'Select the compiled configuration'
#           'concurrent_sampleLight_b92'
#         required: true
#         default: 'concurrent_sampleLight_b92'

jobs:
  prepare_env:
    runs-on: ubuntu-latest
    
    steps:
    - name: check parameters
      run: |
        echo "cproject ${{ github.event.inputs.cproject }}"
        echo "target ${{ github.event.inputs.target }}"

    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Restore Cached Toolchain
      id: Restore_Cached_Toolchain
      uses: actions/cache@v4
      with:
        path: |
          cdt2cmake_Linux_X64
          V512f_Linux_X64
        key: ${{ runner.os }}-toolchain-
        restore-keys: |
          ${{ runner.os }}-toolchain-D25F-GCC10
     
    - if: ${{ steps.Restore_Cached_Toolchain.outputs.cache-hit != 'true' }}
      name: download and decompression toolchain
      run: |
        curl -o V512f_Linux_X64.tar.xz https://wiki.telink-semi.cn/tools_and_sdk/others/toolchains/V512f_Linux_X64.tar.xz
        mkdir -p V512f_Linux_X64
        tar -xf V512f_Linux_X64.tar.xz -C V512f_Linux_X64
        if [ $? != 0 ]; then
          echo "download toolchain fail"
          exit 1
        fi
        ls
        ls V512f_Linux_X64
        
        
        curl -o cdt2cmake_Linux_X64.tar.xz https://wiki.telink-semi.cn/tools_and_sdk/others/cdt2cmake_Linux_X64_0.4.7.tar.xz
        mkdir -p cdt2cmake_Linux_X64
        tar -xf cdt2cmake_Linux_X64.tar.xz -C cdt2cmake_Linux_X64
        if [ $? != 0 ]; then
          echo "download cdt2cmake fail"
          exit 1
        fi
        ls
        ls cdt2cmake_Linux_X64
        
    - if: ${{ steps.Restore_Cached_Toolchain.outputs.cache-hit != 'true' }}
      name: Cache Toolchain
      uses: actions/cache@v4
      with:
        path: |
          cdt2cmake_Linux_X64
          V512f_Linux_X64
          
        key: ${{ runner.os }}-toolchain-D25F-GCC10

    # - name: convert cdt2cmake
    #   run: |
    #     echo "convert cdt2cmake"
    #     ./cdt2cmake_Linux_X64/cdt2cmake.dist/cdt2cmake.bin ./telink_zigbee_ble_concurrent_sdk/build/iot_riscv_b92/.cproject -i
    #     find . -name "CMakeLists.txt"
    # - name: cmake build
    #   run: |
    #     echo "cmake building..."
    #     ls
    #     cmake ./b85_ble_sdk -Bcmake_build -DTOOLCHAIN_PATH="`pwd`/tc32"
    #     echo "parameter_name ${{ github.event.inputs.target }}"
    #     cmake --build cmake_build --target "${{ github.event.inputs.target }}" -j16

    # - name: upload cmake artifacts
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: cmake-files
    #     path: |
    #       ./**/CMakeLists.txt
    #     retention-days: 1

  Linux_CMake_build:
    runs-on: ubuntu-latest
    needs: prepare_env
    defaults:
      run:
        shell: bash

    steps:
    - name: check parameters
      run: |
        echo "cproject ${{ github.event.inputs.cproject }}"
        echo "target ${{ github.event.inputs.target }}"

    - name: Checkout Repository
      uses: actions/checkout@v4

    # - name: Download and extract CMakeLists.txt files
    #   uses: actions/download-artifact@v4
    #   with:
    #     name: cmake-files
    #     path: .

    - name: Restore Cached Toolchain
      id: Restore_Cached_Toolchain
      uses: actions/cache@v4
      with:
        path: |
          cdt2cmake_Linux_X64
          V512f_Linux_X64
        key: ${{ runner.os }}-toolchain-D25F-GCC10
        restore-keys: |
          ${{ runner.os }}-toolchain-D25F-GCC10
     
  #   - if: ${{ steps.Restore_Cached_Toolchain.outputs.cache-hit != 'true' }}
  #     name: Cache Toolchain
  #     uses: actions/cache@v4
  #     with:
  #       path: |
  #         # cdt2cmake
  #         tc32
  #       key: ${{ runner.os }}-toolchain-tc32
  
    - name: convert cdt2cmake
      run: |
        echo "convert cdt2cmake"
        ./cdt2cmake_Linux_X64/cdt2cmake.dist/cdt2cmake.bin ./telink_zigbee_ble_concurrent_sdk/build/iot_riscv_b92/.cproject -i
        find . -name "CMakeLists.txt"
        
    - name: cmake build
      shell: bash
      run: |
        echo "cmake building..."
        cmake --version
        cmake telink_zigbee_ble_concurrent_sdk -Bcmake_build -G "Unix Makefiles"  -DTOOLCHAIN_PATH=$(pwd)/V512f_Linux_X64/nds32le-elf-mculib-v5f -DCMAKE_C_COMPILER_FORCED=TRUE -DCMAKE_CXX_COMPILER_FORCED=TRUE 
        cmake --build cmake_build --target concurrent_sampleLight_b92 -j32

    - name: upload cmake output artifacts
      uses: actions/upload-artifact@v4
      with:
        name: cmake-bin-files
        path: |
          cmake_build/concurrent_sampleLight_b92*
        retention-days: 1
